networks:
  media_net:
    driver: bridge

services:
  pia:
    image: ghcr.io/thrnz/docker-wireguard-pia:latest
    container_name: pia
    cap_add: [ NET_ADMIN ]
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1
    environment:
      - USER=${PIA_USER}
      - PASS=${PIA_PASS}
      - LOC=ca_ontario
      - PORT_FORWARDING=1
      - VPNDNS=1.1.1.1,9.9.9.9
      - ACTIVE_HEALTHCHECKS=1
      - LOCAL_NETWORK=192.168.0.0/16
    volumes:
      - ./pia:/config
      - /lib/modules:/lib/modules:ro
    ports:
      - "8082:8082/tcp"    # qBittorrent WebUI (via proxy)
      - "8080:8080/tcp"    # SABnzbd WebUI (via proxy)
      - "6881:6881/tcp"
      - "6881:6881/udp"
    restart: unless-stopped
    networks: [ media_net ]

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: "service:pia"
    depends_on: [ pia ]
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8082
    volumes:
      - ./configs/qbittorrent:/config
      - "${MEDIA_BASE}/complete:/downloads/complete"
      - "${MEDIA_BASE}/incomplete:/downloads/incomplete"
    restart: unless-stopped

  # NEW: Proxy to expose qBittorrent from PIA network to media_net
  qbit-proxy:
    image: nginx:alpine
    container_name: qbit-proxy
    networks: [ media_net ]
    depends_on: [ qbittorrent ]
    restart: unless-stopped
    command: >
      sh -c "echo '
        events {}
        http {
          server {
            listen 8082;
            location / {
              proxy_pass http://pia:8082;
            }
          }
        }' > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    network_mode: "service:pia"
    depends_on: [ pia ]
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./configs/sabnzbd:/config
      - "${MEDIA_BASE}/complete:/downloads/complete"
      - "${MEDIA_BASE}/incomplete:/downloads/incomplete"
    restart: unless-stopped

  # NEW: Proxy to expose SABnzbd from PIA network to media_net
  sab-proxy:
    image: nginx:alpine
    container_name: sab-proxy
    networks: [ media_net ]
    depends_on: [ sabnzbd ]
    restart: unless-stopped
    command: >
      sh -c "echo '
        events {}
        http {
          server {
            listen 8080;
            location / {
              proxy_pass http://pia:8080;
            }
          }
        }' > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    ports: [ "9696:9696" ]
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./configs/prowlarr:/config
    restart: unless-stopped
    networks: [ media_net ]

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    ports: [ "8989:8989" ]
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./configs/sonarr:/config
      - "${MEDIA_BASE}/media:/data/media"
      - "${MEDIA_BASE}/complete:/downloads/complete"
      - "${MEDIA_BASE}/incomplete:/downloads/incomplete"
    depends_on: [ prowlarr ]
    restart: unless-stopped
    networks: [ media_net ]

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    ports: [ "7878:7878" ]
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./configs/radarr:/config
      - "${MEDIA_BASE}/media:/data/media"
      - "${MEDIA_BASE}/complete:/downloads/complete"
      - "${MEDIA_BASE}/incomplete:/downloads/incomplete"
    depends_on: [ prowlarr ]
    restart: unless-stopped
    networks: [ media_net ]

  jellyseerr:
    image: fallenbagel/jellyseerr:develop
    container_name: jellyseerr
    ports: [ "5055:5055" ]
    environment:
      - TZ=${TZ}
    volumes:
      - ./configs/jellyseerr:/app/config
    depends_on: [ plex, sonarr, radarr ]
    restart: unless-stopped
    networks: [ media_net ]

  unmanic:
    image: josh5/unmanic:latest
    container_name: unmanic
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UNMANIC_FFMPEG_ARGS=-analyzeduration 2147483647 -probesize 2147483647
    volumes:
      - ./configs/unmanic:/config
      - "${MEDIA_BASE}/media/movies:/library/movies"
      - "${MEDIA_BASE}/media/tv:/library/tv"
      - "${MEDIA_BASE}/complete:/library/watch"
    ports:
      - 8888:8888
    networks: [ media_net ]
    restart: unless-stopped

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./configs/bazarr:/config
      - "${MEDIA_BASE}/media/movies:/movies"
      - "${MEDIA_BASE}/media/tv:/tv"
    ports:
      - 6767:6767
    networks: [ media_net ]
    restart: unless-stopped

  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    ports: [ "8181:8181" ]
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./configs/tautulli:/config
      - ./configs/plex/Library Application Support/Plex Media Server/Logs:/logs:ro
    depends_on: [ plex ]
    restart: unless-stopped
    networks: [ media_net ]

  maintainerr:
    image: ghcr.io/jorenn92/maintainerr:main
    container_name: maintainerr
    user: "${PUID}:${PGID}"
    environment:
      - TZ=${TZ}
    volumes:
      - ./configs/maintainerr:/opt/data
    ports:
      - "6246:6246"
    restart: unless-stopped
    networks: [ media_net ]

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    ports:
      - "32400:32400/tcp"
      - "1900:1900/udp"
      - "32469:32469/tcp"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VERSION=docker
    volumes:
      - ./configs/plex:/config
      - "${MEDIA_BASE}/media:/data/media"
    restart: unless-stopped
    networks: [ media_net ]

  cloudflare-ddns:
    image: oznu/cloudflare-ddns:latest
    container_name: cloudflare-ddns
    restart: unless-stopped
    environment:
      - API_KEY=${CF_API_KEY}
      - ZONE=famflix.live
      - SUBDOMAIN=plex
      - PROXIED=false
      - TTL=120

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel run jellyseerr
    environment:
      - TUNNEL_TOKEN=${CF_TUNNEL_TOKEN}
    networks: [ media_net ]

  caddy:
    image: caddy:latest
    container_name: caddy
    restart: unless-stopped
    networks:
      - media_net
    ports:
      - "80:80"
      - "443:443"
    environment:
      - ACME_AGREE=true
      - EMAIL=hadenhiles@gmail.com
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./caddy/data:/data
      - ./caddy/config:/config

  # seedlink:
  #   image: python:3.12
  #   container_name: seedlink
  #   networks: [ media_net ]
  #   depends_on: [ qbittorrent, sabnzbd ]
  #   environment:
  #     - QBIT_HOST=http://qbittorrent:8082
  #     - QBIT_USER=${QBIT_USER}
  #     - QBIT_PASS=${QBIT_PASS}
  #     - TORRENTLEECH_UID=${TORRENTLEECH_UID}
  #     - TORRENTLEECH_PASS=${TORRENTLEECH_PASS}
  #     - PROWLARR_API_KEY=${PROWLARR_API_KEY}
  #     - MILKIE_COOKIE=${MILKIE_COOKIE}
  #     - MAX_PEERS=${MAX_PEERS}
  #     - STOP_RATIO=${STOP_RATIO}
  #     - TZ=${TZ}
  #     - SAB_COMPLETE_DIR=/downloads/complete
  #   volumes:
  #     - "${MEDIA_BASE}/complete:/downloads/complete"
  #     - ./configs/seedlink:/app
  #     - ./configs/seedlink/logs:/logs
  #   command: ["sleep", "infinity"]
  #   restart: unless-stopped
